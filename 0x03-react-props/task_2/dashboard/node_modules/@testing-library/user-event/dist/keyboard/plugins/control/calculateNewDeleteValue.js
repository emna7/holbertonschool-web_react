"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.calculateNewDeleteValue = calculateNewDeleteValue;

var _utils = require("../../../utils");

function calculateNewDeleteValue(element) {
  var _getValue;

  const {
    selectionStart,
    selectionEnd
  } = (0, _utils.getSelectionRange)(element); // istanbul ignore next

  const value = (_getValue = (0, _utils.getValue)(element)) != null ? _getValue : '';
  let newValue;

  if (selectionStart === null) {
    // at the end of an input type that does not support selection ranges
    // https://github.com/testing-library/user-event/issues/316#issuecomment-639744793
    newValue = value;
  } else if (selectionStart === selectionEnd) {
    if (selectionStart === 0) {
      // at the beginning of the input
      newValue = value.slice(1);
    } else if (selectionStart === value.length) {
      // at the end of the input
      newValue = value;
    } else {
      // in the middle of the input
      newValue = value.slice(0, selectionStart) + value.slice(selectionEnd + 1);
    }
  } else {
    // we have something selected
    const firstPart = value.slice(0, selectionStart);
    newValue = firstPart + value.slice(selectionEnd);
  }

  return {
    newValue,
    newSelectionStart: selectionStart != null ? selectionStart : 0
  };
}