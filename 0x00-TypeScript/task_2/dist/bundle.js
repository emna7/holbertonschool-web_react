!function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,r){"use strict";r.r(e),r.d(e,"Director",(function(){return n})),r.d(e,"Teacher",(function(){return o})),r.d(e,"createEmployee",(function(){return u})),r.d(e,"isDirector",(function(){return i})),r.d(e,"executeWork",(function(){return c})),r.d(e,"teachClass",(function(){return f}));var n=function(){function t(){}return t.prototype.workFromHome=function(){return"Working from home"},t.prototype.getCoffeeBreak=function(){return"Getting a coffee break"},t.prototype.workDirectorTasks=function(){return"Getting to director tasks"},t}(),o=function(){function t(){}return t.prototype.workFromHome=function(){return"Cannot work from home"},t.prototype.getCoffeeBreak=function(){return"Cannot have a break"},t.prototype.workDirectorTasks=function(){return"Getting to work"},t}();function u(t){return"number"==typeof t&&t<500?new o:new n}function i(t){return t instanceof n}function c(t){return t instanceof n||t instanceof o?t.workDirectorTasks():void 0}function f(t){return"Math"===t?"Teaching Math":"History"===t?"Teaching History":void 0}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,